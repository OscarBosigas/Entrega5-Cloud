{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/crud/crud.component.ts","./src/app/crud/crud.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/login.service.ts","./src/app/services/tasks.service.ts","./src/app/services/usuario.ts","./src/app/sing/sing.component.ts","./src/app/sing/sing.component.html","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { CrudComponent } from './crud/crud.component';\nimport { SingComponent } from './sing/sing.component';\nimport { UploadComponent } from './upload/upload.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'crud', component: CrudComponent},\n  { path: 'registro', component: SingComponent},\n  { path: 'archivo', component: UploadComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Front';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport { CrudComponent } from './crud/crud.component';\nimport { SingComponent } from './sing/sing.component';\nimport { UploadComponent } from './upload/upload.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CrudComponent,\n    SingComponent,\n    UploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { TasksService } from '../services/tasks.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Usuario } from '../services/usuario';\r\nimport { Archivos } from '../services/task';\r\nimport { switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-crud',\r\n  templateUrl: './crud.component.html',\r\n  styleUrls: ['./crud.component.css']\r\n})\r\nexport class CrudComponent implements OnInit {\r\n\r\n  constructor(private service : TasksService,\r\n     private router: Router, private route: ActivatedRoute,\r\n     private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  task : any;\r\n\r\n  tasks: Array<Archivos> = [];\r\n\r\n  isUploaded = false;\r\n\r\n  ngOnInit(): void {\r\n    this.getTasksByUser();\r\n  }\r\n\r\n  getTaskById() {\r\n    const id = this.route.snapshot.params['id'];\r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n      this.service.getTaskById(id, usuario)\r\n      .subscribe(data => {\r\n        this.task = data;\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  getTasksByUser() {\r\n    \r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n      this.service.getTasksByUser(usuario)\r\n      .subscribe(data => {\r\n        this.tasks = data;\r\n      });\r\n    }\r\n  }\r\n\r\n  onBorrar(id: number){\r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n    this.service.deleteTask(id, usuario)\r\n    .pipe(\r\n      switchMap(async () => this.getTasksByUser())\r\n    )\r\n    .subscribe(res =>{\r\n      this.changeDetectorRef.detectChanges();\r\n      alert('Tarea eliminada')\r\n    });\r\n    }\r\n  }\r\n\r\n  onAgregar(){\r\n    this.router.navigate(['archivo'])\r\n  }\r\n\r\n  onDescargar(nombre: string, formato: string, status: string){\r\n    const file = nombre +\".\"+ formato;\r\n    if(status != \"uploaded\"){\r\n      this.isUploaded = true\r\n      this.service.downloadFile(file);\r\n    }\r\n  }\r\n}\r\n","<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th class=\"h4\">Id</th>\r\n            <th class=\"h4\">Email</th>\r\n            <th class=\"h4\">Status</th>\r\n            <th class=\"h4\">Fecha</th>\r\n            <th class=\"h4\">Nombre</th>\r\n            <th class=\"h4\">Formato</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let e of tasks; let i = index\">\r\n        <td>\r\n            <dd>{{e.id}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.email}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.status}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.time}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.fileName}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.format}}</dd>\r\n        </td>\r\n        <td>\r\n            <button (click)=\"onBorrar(e.id)\" class=\"btn-danger\">Borrar</button>\r\n          </td>\r\n        <td>\r\n            <button [disabled]=\"isUploaded\" (click)=\"onDescargar(e.fileName , e.format, e.status)\">Descargar archivo</button>\r\n        </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <button (click)=\"onAgregar()\" class=\"btn-success\">Agregar Archivo</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LogInService } from '../services/login.service';\nimport { Usuario } from '../services/usuario';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  username: string = '';\n  password1: string = '';\n  password2: string = '';\n  errorMessage: string = '';\n  email: string = '';\n\n  constructor(private login : LogInService, private route : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin() {\n    this.login.logIn(new Usuario(0,this.username, this.email, this.password1, '',''))\n    .subscribe(res =>{\n          const usuario: any = res;\n          // Almacenar la información del usuario en el almacenamiento local\n          this.login.saveUserInformation(usuario);\n          this.route.navigate(['crud']);\n    }, error => {\n      this.errorMessage = error;\n      alert(this.errorMessage)\n    }); \n  }\n\n  onSingIn() {\n    this.route.navigate(['registro']);\n  }\n\n}\n","<!-- HTML Code -->\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n        <div class=\"card card-signin my-5\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title text-center\">Inicio Sesion</h5>\n            <form class=\"form-signin\">\n              <div class=\"form-label-group\">\n                <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" id=\"inputName\" class=\"form-control\" placeholder=\"Usuario\" required autofocus>\n                <label for=\"inputEmail\"></label>\n              </div>\n  \n              <div class=\"form-label-group\">\n                <input [(ngModel)]=\"password1\" name=\"password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Contraseña\" required>\n                <label for=\"inputPassword\"></label>\n              </div>\n              \n              <div class=\"row\">\n                <button (click)=\"onLogin()\" class=\"col btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Entrar</button>\n                <hr class=\"my-4\">\n                <div class=\"col\">\n\n                </div>\n                <button (click)=\"onSingIn()\" class=\"col btn btn-lg btn-success btn-block text-uppercase\" type=\"submit\">Registro</button>\n                <hr class=\"my-4\">\n                </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http'\r\nimport { Usuario } from '../services/usuario'\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LogInService {\r\n\r\n    constructor (private http: HttpClient) {}\r\n\r\n    saveUserInformation(usuario: Usuario) {\r\n      localStorage.setItem('usuario', JSON.stringify(usuario));\r\n    }\r\n\r\n    public logIn(usuario: Usuario) {\r\n        return this.http.post('https://back-76yejkspxa-uc.a.run.app/api/auth/login', usuario)\r\n        .pipe(\r\n            catchError(this.handleErrorLogin)\r\n          );\r\n    }\r\n\r\n    public singIn(usuario: Usuario)    {\r\n        return this.http.post('https://back-76yejkspxa-uc.a.run.app/api/auth/signup', usuario)\r\n        .pipe(\r\n            catchError(this.handleErrorSingin)\r\n          );\r\n    }\r\n\r\n    private handleErrorLogin(error: HttpErrorResponse) {\r\n        if (error.status === 400) {\r\n          return throwError(JSON.stringify(error.error.mensaje));\r\n        }\r\n        return throwError('Las credenciales no son correctas');\r\n    }\r\n\r\n    private handleErrorSingin(error: HttpErrorResponse) {\r\n        if (error.status === 400) {\r\n          return throwError(JSON.stringify(error.error.mensaje));\r\n        }\r\n        return throwError('Hay errores en su registro!');\r\n      }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from './usuario';\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n  private byUserUrl = 'https://back-76yejkspxa-uc.a.run.app/api/tasks?email';\r\n  private byIdUrl = 'https://back-76yejkspxa-uc.a.run.app0/api/task';\r\n  private deleteUrl = 'https://back-76yejkspxa-uc.a.run.app/api/task?id';\r\n  private addUrl = 'https://back-76yejkspxa-uc.a.run.app/api/upload';\r\n  private downloadUri = 'https://back-76yejkspxa-uc.a.run.app/api/download?file'\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTaskById(id:number, user: Usuario): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Token': user.token\r\n    });\r\n\r\n    return this.http.get(`${this.byIdUrl}/${id}`, { headers });\r\n  }\r\n\r\n  getTasksByUser(user:Usuario): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Token': user.token\r\n    });\r\n\r\n    return this.http.get(`${this.byUserUrl}=${user.email}`, { headers });\r\n  }\r\n\r\n  deleteTask(id: number, user: Usuario){\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Token': user.token\r\n    });\r\n    return this.http.delete(`${this.deleteUrl}=${id}`, { headers });\r\n  }\r\n\r\n  addTask(formData: FormData){\r\n    return this.http.post(this.addUrl, formData);\r\n  }\r\n\r\n  downloadFile(filename: string) {\r\n    this.http.get(`${this.downloadUri}=${filename}`, { responseType: 'blob' })\r\n      .subscribe((data: Blob) => {\r\n        FileSaver.saveAs(data, filename);\r\n      });\r\n  }\r\n}\r\n","export class Usuario {\r\n    constructor(public id:number, public username:string,  public email:string,\r\n         public password1:string, public password2:string, public token:string){\r\n\r\n        }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { LogInService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../services/usuario';\n\n@Component({\n  selector: 'app-sing',\n  templateUrl: './sing.component.html',\n  styleUrls: ['./sing.component.css']\n})\nexport class SingComponent implements OnInit {\n\n  constructor(private service: LogInService, private route : Router) { }\n\n  username: string = '';\n  password1: string = '';\n  password2: string = '';\n  errorMessage: string = '';\n  email: string = '';\n\n  ngOnInit(): void {\n  }\n\n  onRegistrar(){\n    this.service.singIn(new Usuario(0,this.username, this.email, this.password1, this.password2, '')).subscribe(res =>{\n      this.route.navigate([''])\n    }, error => {\n      this.errorMessage = error;\n      alert(this.errorMessage)\n    });\n\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Formulario de Registro</title>\n\t<style>\n\t\tbody {\n\t\t\tbackground-color: #F9F9F9;\n\t\t\tfont-family: Arial, sans-serif;\n\t\t}\n\t\t\n\t\th1 {\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 50px;\n\t\t\tcolor: #333;\n\t\t}\n\t\t\n\t\tform {\n\t\t\twidth: 500px;\n\t\t\tmargin: 50px auto;\n\t\t\tbackground-color: #FFF;\n\t\t\tpadding: 20px;\n\t\t\tborder-radius: 10px;\n\t\t\tbox-shadow: 0 0 10px rgba(0,0,0,0.2);\n\t\t}\n\t\t\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 16px;\n\t\t\tfont-weight: bold;\n\t\t\tmargin-bottom: 10px;\n\t\t\tcolor: #333;\n\t\t}\n\t\t\n\t\tinput[type=\"text\"], input[type=\"email\"], input[type=\"password\"] {\n\t\t\twidth: 100%;\n\t\t\theight: 40px;\n\t\t\tpadding: 5px;\n\t\t\tfont-size: 16px;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: 1px solid #CCC;\n\t\t\tmargin-bottom: 20px;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t\t\n\t\tinput[type=\"submit\"] {\n\t\t\tbackground-color: #333;\n\t\t\tcolor: #FFF;\n\t\t\tfont-size: 16px;\n\t\t\tfont-weight: bold;\n\t\t\tpadding: 10px 20px;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: none;\n\t\t\tcursor: pointer;\n\t\t}\n\t\t\n\t\tinput[type=\"submit\"]:hover {\n\t\t\tbackground-color: #444;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<h1>Registro de Usuario</h1>\n\t<form>\n\t\t<label for=\"username\">Nombre de Usuario:</label>\n\t\t<input [(ngModel)]=\"username\" type=\"text\" id=\"username\" name=\"username\" required>\n\t\t\n\t\t<label for=\"email\">Correo Electrónico:</label>\n\t\t<input [(ngModel)]=\"email\" type=\"email\" id=\"email\" name=\"email\" required>\n\t\t\n\t\t<label for=\"password1\">Contraseña:</label>\n\t\t<input [(ngModel)]=\"password1\" type=\"password\" id=\"password1\" name=\"password1\" required>\n\t\t\n\t\t<label for=\"password2\">Confirmar Contraseña:</label>\n\t\t<input [(ngModel)]=\"password2\" type=\"password\" id=\"password2\" name=\"password2\" required>\n\t\t\n        <button (click)=\"onRegistrar()\" class=\"col btn btn-lg btn-success btn-block text-uppercase\" type=\"submit\">Registrar</button>\n                \n\t</form>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../services/tasks.service';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../services/usuario';\nimport { Archivos } from '../services/task';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  format : string = '';\n  selectedFile!: File;\n  dateDay = new Date()\n  \n\n  constructor(private service: TasksService, private route : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onSubmit(){\n    const usuarioJson = localStorage.getItem('usuario');\n    if (usuarioJson !== null) {\n      const usuario: Usuario = JSON.parse(usuarioJson);\n      const formData: FormData = new FormData();\n      formData.append('file', this.selectedFile);\n      formData.append('format', this.format);\n      formData.append('email', usuario.email);\n      this.service.addTask(formData)\n      .subscribe(data => {\n        alert('Tarea creada')\n        this.route.navigate(['crud'])\n      });\n    }\n  }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Formulario de Carga de Archivos</title>\n\t<style>\n\t\tbody {\n\t\t\tbackground-color: #F9F9F9;\n\t\t\tfont-family: Arial, sans-serif;\n\t\t}\n\t\t\n\t\th1 {\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 50px;\n\t\t\tcolor: #333;\n\t\t}\n\t\t\n\t\tform {\n\t\t\twidth: 500px;\n\t\t\tmargin: 50px auto;\n\t\t\tbackground-color: #FFF;\n\t\t\tpadding: 20px;\n\t\t\tborder-radius: 10px;\n\t\t\tbox-shadow: 0 0 10px rgba(0,0,0,0.2);\n\t\t}\n\t\t\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tfont-size: 16px;\n\t\t\tfont-weight: bold;\n\t\t\tmargin-bottom: 10px;\n\t\t\tcolor: #333;\n\t\t}\n\t\t\n\t\tinput[type=\"file\"] {\n\t\t\twidth: 100%;\n\t\t\theight: 40px;\n\t\t\tpadding: 5px;\n\t\t\tfont-size: 16px;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: 1px solid #CCC;\n\t\t\tmargin-bottom: 20px;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t\t\n\t\tselect {\n\t\t\twidth: 100%;\n\t\t\theight: 40px;\n\t\t\tpadding: 5px;\n\t\t\tfont-size: 16px;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: 1px solid #CCC;\n\t\t\tmargin-bottom: 20px;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t\t\n\t\tinput[type=\"submit\"] {\n\t\t\tbackground-color: #333;\n\t\t\tcolor: #FFF;\n\t\t\tfont-size: 16px;\n\t\t\tfont-weight: bold;\n\t\t\tpadding: 10px 20px;\n\t\t\tborder-radius: 5px;\n\t\t\tborder: none;\n\t\t\tcursor: pointer;\n\t\t}\n\t\t\n\t\tinput[type=\"submit\"]:hover {\n\t\t\tbackground-color: #444;\n\t\t}\n\t</style>\n</head>\n<body>\n\t<h1>Carga de Archivos</h1>\n\t<form>\n\t\t<label for=\"file\">Archivo:</label>\n\t\t<input type=\"file\" id=\"file\" name=\"file\" (change)=\"onFileSelected($event)\">\n\t\t\n\t\t<label for=\"format\">Formato de Compresión:</label>\n\t\t<select id=\"format\" name=\"format\" [(ngModel)]=\"format\" required>\n\t\t\t<option value=\"zip\">ZIP</option>\n\t\t\t<option value=\"rar\">RAR</option>\n\t\t\t<option value=\"7zip\">7ZIP</option>\n\t\t</select>\n\t\t\n\t\t<button (click)=\"onSubmit()\" class=\"col btn btn-lg btn-success btn-block text-uppercase\" type=\"submit\">Cargar</button>\n\t</form>\n</body>\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ChangeDetectorRef","switchMap","i0","CrudComponent","constructor","service","router","route","changeDetectorRef","ngOnInit","getTasksByUser","getTaskById","id","snapshot","params","usuarioJson","localStorage","getItem","usuario","JSON","parse","subscribe","data","task","tasks","onBorrar","deleteTask","pipe","res","detectChanges","alert","onAgregar","navigate","onDescargar","nombre","formato","status","file","isUploaded","downloadFile","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}