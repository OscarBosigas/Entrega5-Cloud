{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/oscar/OneDrive/Desktop/maestria/semestre2/Cloud/Entrega4/Entrega4-Cloud/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/tasks.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction CrudComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"dd\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"dd\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"dd\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"dd\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"dd\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"td\")(17, \"dd\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CrudComponent_tr_16_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const e_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onBorrar(e_r1.id));\n    });\n    i0.ɵɵtext(21, \"Borrar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CrudComponent_tr_16_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const e_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDescargar(e_r1.fileName, e_r1.format, e_r1.status));\n    });\n    i0.ɵɵtext(24, \"Descargar archivo\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.time);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.fileName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(e_r1.format);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isUploaded);\n  }\n}\n\nexport class CrudComponent {\n  constructor(service, router, route, changeDetectorRef) {\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.changeDetectorRef = changeDetectorRef;\n    this.tasks = [];\n    this.isUploaded = false;\n  }\n\n  ngOnInit() {\n    this.getTasksByUser();\n  }\n\n  getTaskById() {\n    const id = this.route.snapshot.params['id'];\n    const usuarioJson = localStorage.getItem('usuario');\n\n    if (usuarioJson !== null) {\n      const usuario = JSON.parse(usuarioJson);\n      this.service.getTaskById(id, usuario).subscribe(data => {\n        this.task = data;\n      });\n    }\n  }\n\n  getTasksByUser() {\n    const usuarioJson = localStorage.getItem('usuario');\n\n    if (usuarioJson !== null) {\n      const usuario = JSON.parse(usuarioJson);\n      this.service.getTasksByUser(usuario).subscribe(data => {\n        this.tasks = data;\n      });\n    }\n  }\n\n  onBorrar(id) {\n    var _this = this;\n\n    const usuarioJson = localStorage.getItem('usuario');\n\n    if (usuarioJson !== null) {\n      const usuario = JSON.parse(usuarioJson);\n      this.service.deleteTask(id, usuario).pipe(switchMap( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this.getTasksByUser();\n      }))).subscribe(res => {\n        this.changeDetectorRef.detectChanges();\n        alert('Tarea eliminada');\n      });\n    }\n  }\n\n  onAgregar() {\n    this.router.navigate(['archivo']);\n  }\n\n  onDescargar(nombre, fromato, status) {\n    const file = nombre + \".\" + fromato;\n\n    if (status != \"uploaded\") {\n      this.isUploaded = true;\n      this.service.downloadFile(file);\n    }\n  }\n\n}\n\nCrudComponent.ɵfac = function CrudComponent_Factory(t) {\n  return new (t || CrudComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nCrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CrudComponent,\n  selectors: [[\"app-crud\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"table\"], [1, \"h4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-success\", 3, \"click\"], [1, \"btn-danger\", 3, \"click\"], [3, \"disabled\", \"click\"]],\n  template: function CrudComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Fecha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 1);\n      i0.ɵɵtext(14, \"Formato\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, CrudComponent_tr_16_Template, 25, 7, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function CrudComponent_Template_button_click_17_listener() {\n        return ctx.onAgregar();\n      });\n      i0.ɵɵtext(18, \"Agregar Archivo\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcnVkLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ChangeDetectorRef","switchMap","i0","CrudComponent","constructor","service","router","route","changeDetectorRef","ngOnInit","getTasksByUser","getTaskById","id","snapshot","params","usuarioJson","localStorage","getItem","usuario","JSON","parse","subscribe","data","task","tasks","onBorrar","deleteTask","pipe","res","detectChanges","alert","onAgregar","navigate","onDescargar","nombre","fromato","status","file","isUploaded","downloadFile","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\oscar\\OneDrive\\Desktop\\maestria\\semestre2\\Cloud\\Entrega4\\Entrega4-Cloud\\Front\\src\\app\\crud\\crud.component.ts","C:\\Users\\oscar\\OneDrive\\Desktop\\maestria\\semestre2\\Cloud\\Entrega4\\Entrega4-Cloud\\Front\\src\\app\\crud\\crud.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { TasksService } from '../services/tasks.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Usuario } from '../services/usuario';\r\nimport { Archivos } from '../services/task';\r\nimport { switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-crud',\r\n  templateUrl: './crud.component.html',\r\n  styleUrls: ['./crud.component.css']\r\n})\r\nexport class CrudComponent implements OnInit {\r\n\r\n  constructor(private service : TasksService,\r\n     private router: Router, private route: ActivatedRoute,\r\n     private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  task : any;\r\n\r\n  tasks: Array<Archivos> = [];\r\n\r\n  isUploaded = false;\r\n\r\n  ngOnInit(): void {\r\n    this.getTasksByUser();\r\n  }\r\n\r\n  getTaskById() {\r\n    const id = this.route.snapshot.params['id'];\r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n      this.service.getTaskById(id, usuario)\r\n      .subscribe(data => {\r\n        this.task = data;\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  getTasksByUser() {\r\n    \r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n      this.service.getTasksByUser(usuario)\r\n      .subscribe(data => {\r\n        this.tasks = data;\r\n      });\r\n    }\r\n  }\r\n\r\n  onBorrar(id: number){\r\n    const usuarioJson = localStorage.getItem('usuario');\r\n    if (usuarioJson !== null) {\r\n      const usuario: Usuario = JSON.parse(usuarioJson);\r\n    this.service.deleteTask(id, usuario)\r\n    .pipe(\r\n      switchMap(async () => this.getTasksByUser())\r\n    )\r\n    .subscribe(res =>{\r\n      this.changeDetectorRef.detectChanges();\r\n      alert('Tarea eliminada')\r\n    });\r\n    }\r\n  }\r\n\r\n  onAgregar(){\r\n    this.router.navigate(['archivo'])\r\n  }\r\n\r\n  onDescargar(nombre: string, fromato: string, status: string){\r\n    const file = nombre +\".\"+ fromato;\r\n    if(status != \"uploaded\"){\r\n      this.isUploaded = true\r\n      this.service.downloadFile(file);\r\n    }\r\n  }\r\n}\r\n","<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th class=\"h4\">Id</th>\r\n            <th class=\"h4\">Email</th>\r\n            <th class=\"h4\">Status</th>\r\n            <th class=\"h4\">Fecha</th>\r\n            <th class=\"h4\">Nombre</th>\r\n            <th class=\"h4\">Formato</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let e of tasks; let i = index\">\r\n        <td>\r\n            <dd>{{e.id}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.email}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.status}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.time}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.fileName}}</dd>\r\n        </td>\r\n        <td>\r\n            <dd>{{e.format}}</dd>\r\n        </td>\r\n        <td>\r\n            <button (click)=\"onBorrar(e.id)\" class=\"btn-danger\">Borrar</button>\r\n          </td>\r\n        <td>\r\n            <button [disabled]=\"isUploaded\" (click)=\"onDescargar(e.fileName , e.format, e.status)\">Descargar archivo</button>\r\n        </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <button (click)=\"onAgregar()\" class=\"btn-success\">Agregar Archivo</button>"]},"metadata":{},"sourceType":"module"}